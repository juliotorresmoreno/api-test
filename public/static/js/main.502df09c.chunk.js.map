{"version":3,"sources":["actions/actionTypes.js","reducers/auth.js","reducers/users.js","reducers/news.js","reducers/index.js","store/defaultState.js","store/store.js","components/Route/Route.jsx","utils/errors.js","utils/parseError.js","config/index.js","actions/news.js","components/New/New.jsx","pages/News/List.jsx","components/ShowErrorMessage/ShowErrorMessage.jsx","components/Forms/NewsNew.jsx","pages/News/NewPost.jsx","pages/News/News.jsx","components/Router/Router.jsx","components/UnauthenticateNavBar/UnauthenticateNavBar.jsx","actions/auth.js","components/Forms/validator.js","components/Forms/SignInForm.jsx","pages/SignIn/SignIn.jsx","actions/users.js","components/Forms/SignUpForm.jsx","pages/SignUp/SignUp.jsx","components/Footer/Footer.jsx","components/AuthenticateNavBar/AuthenticateNavBar.jsx","components/Layout/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["userTypes","created","authTypes","logged","newsTypes","listed","deleted","defaultState","profile","name","lastName","email","token","NoneAction","type","authReducer","state","action","actionLogged","usersReducer","data","newsReducer","actionListed","rootReducer","combineReducers","auth","users","news","localState","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","removeEventListener","setItem","stringify","getState","onunload","Route","props","APIError","Error","parseError","error","errorSplit","split","length","location","host","protocol","config","BASE_URL","create","post","dispatch","a","url","dataForm","FormData","append","title","content","image","fetch","method","headers","Accept","Authorization","body","response","json","ok","message","errors","details","parseQuery","query","userId","result","list","queryParams","withRouter","connect","userProfileId","id","Card","Img","variant","src","imageUrl","style","maxHeight","Body","Title","Text","substr","Button","onClick","history","push","_id","postId","confirm","useState","loaded","setLoaded","filter","setFilter","setUserId","useEffect","console","log","actionsNews","Array","isArray","Container","Row","Col","textAlign","md","span","Form","Control","value","onChange","evt","target","Check","checked","label","map","key","ShowErrorMessage","msg","className","setter","setTitle","setContent","setImage","imageFile","setImageFile","titleError","setTitleError","contentError","setContentError","onSubmit","preventDefault","alert","apiError","Group","controlId","Label","minHeight","as","files","path","component","NewPost","List","exact","Router","News","UnauthenticateNavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","login","credentials","isName","fieldName","test","isEmail","validator","isSecurePassword","match","isSecurePasswordConfirm","password","setEmail","setPassword","emailError","setEmailError","passwordError","setPasswordError","actionsAuth","onBlur","alias","styles","marginLeft","marginRight","Signin","offset","fontWeight","user","terms","setName","setLastName","passwordConfirm","setPasswordConfirm","acceptTerms","setAcceptTerms","nameError","setNameError","lastNameError","setLastNameError","passwordConfirmError","setPasswordConfirmError","actionsUsers","to","disabled","SignUp","Footer","AuthenticateNavBar","SignIn","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.502df09c.chunk.js","sourcesContent":["\nconst _userTypes = '@USER_TYPES'\nexport const userTypes = {\n  created: `${_userTypes}/CREATED`\n}\n\nconst _authTypes = '@USER_TYPES'\nexport const authTypes = {\n  logged: `${_authTypes}/LOGGED`\n}\n\nconst _newsTypes = '@NEWS_TYPES'\nexport const newsTypes = {\n  created: `${_newsTypes}/CREATED`,\n  listed: `${_newsTypes}/LISTED`,\n  deleted: `${_newsTypes}/DELETED`,\n}","\n// @flow\nimport { authTypes } from '../actions/actionTypes';\nimport { AuthState } from '../store/types';\n\nconst defaultState: AuthState = {\n  profile: {\n    name: '',\n    lastName: '',\n    email: ''\n  },\n  logged: false,\n  token: ''\n};\n\nconst NoneAction = { type: '@NONE' };\n\ninterface ActionLogged {\n  action: string,\n  profile: {\n    name: string,\n    lastName: string,\n    email: string\n  },\n  token: string\n}\n\n\n/**\n * \n * @param {defaultState} state \n * @param {import('redux').AnyAction} action \n */\nconst authReducer = function (state = defaultState, action = NoneAction): AuthState {\n  if (authTypes.logged === action.type) {\n    const actionLogged: ActionLogged = action;\n    if (actionLogged.token)\n      return {\n        logged: true,\n        profile: actionLogged.profile,\n        token: actionLogged.token\n      };\n    return {\n      logged: false,\n      profile: {\n        email: '',\n        lastName: '',\n        name: ''\n      },\n      token: ''\n    }\n  }\n  return state;\n};\n\nexport default authReducer;\n","\n// @flow\n\nconst defaultState = {\n\n};\n\n/**\n * \n * @param {defaultState} state \n * @param {import('redux').AnyAction} action \n */\nconst usersReducer = function(state = defaultState, action) {\n  return state;\n};\n\nexport default usersReducer;\n","\n// @flow\n\nimport { newsTypes } from '../actions/actionTypes';\nimport { NewsState } from '../store/types';\n\nconst defaultState: NewsState = {\n  data: []\n};\n\ninterface ActionListed {\n  data: Post[]\n}\n\n/**\n * \n * @param {defaultState} state \n * @param {import('redux').AnyAction} action \n */\nconst newsReducer = function (state = defaultState, action): NewsState {\n  if (action.type === newsTypes.listed) {\n    const actionListed: ActionListed = action;\n    return {\n      data: actionListed.data\n    }\n  }\n  return state;\n};\n\nexport default newsReducer;\n","\nimport { combineReducers } from 'redux';\nimport authReducer from './auth';\nimport usersReducer from './users';\nimport newsReducer from './news';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  users: usersReducer,\n  news: newsReducer\n});\n\nexport default rootReducer;","\n\nconst defaultState = {};\n\nexport default defaultState;","\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\nimport defaultState from './defaultState';\n\nconst localState = localStorage.getItem('state');\n\nconst state = localState ? JSON.parse(localState) : defaultState;\n\nconst store = createStore(\n  rootReducer,\n  // @ts-ignore\n  state,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nwindow.removeEventListener(\"beforeunload\", function () {\n  localStorage.setItem('state', JSON.stringify(store.getState()))\n});\n\nwindow.onunload = function () {\n  localStorage.setItem('state', JSON.stringify(store.getState()))\n};\n\nexport default store;\n","// @flow\n\nimport React from 'react';\nimport { Route as RRDRoute } from 'react-router-dom';\nimport { RouteProps } from './@types';\n\nconst Route: React.FC<RouteProps> = (props) => {\n  return (\n    <RRDRoute {...props} />\n  );\n}\n\nexport default Route;\n","\n\nexport class APIError<T> extends Error {\n  details: T\n}","\n// @flow\n\nexport default function parseError<T>(error: String): T {\n  const errorSplit = error.split(':');\n  if (errorSplit.length === 2) {\n    const result: T = {\n      [errorSplit[0]]: errorSplit[1],\n      error: error\n    };\n    return result;\n  }\n  const result: T = {\n    error: error\n  };\n  return result;\n}\n","\nimport { Config } from './types';\n\nconst { host, protocol } = window.location;\n\nconst config: Config = {\n  BASE_URL: `${protocol}://${host}`\n}\n\nexport default config;\n","\n// @flow\n\nimport { userTypes, newsTypes } from './actionTypes';\nimport { APIError } from '../utils/errors';\nimport parseError from '../utils/parseError';\nimport config from '../config';\nimport { DefaultState } from '../store/types';\n\nexport interface Post {\n  title: string,\n  content: string,\n  image: any\n}\n\nconst { BASE_URL } = config;\n\nexport function create(post: Post) {\n  return async function (dispatch, getState: () => DefaultState) {\n    const token = getState().auth.token;\n    const url = `${BASE_URL}/news`\n    const dataForm = new FormData();\n    dataForm.append('title', post.title);\n    dataForm.append('content', post.content);\n    dataForm.append('image', post.image);\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        Authorization: token\n      },\n      body: dataForm\n    })\n    const content = await response.json();\n    if (!response.ok) {\n      const error = new APIError<User>(content.message);\n      const errors = parseError<User>(content.message);\n      error.details = errors;\n      throw error;\n    }\n    dispatch({ type: userTypes.created });\n  }\n}\n\ninterface Query {\n  userId?: string,\n  content?: string\n}\n\nfunction parseQuery(query: Query) {\n  if (!query) {\n    return '';\n  }\n  if (!query.content && !query.userId) {\n    return '';\n  }\n  let result = '';\n  if (query.userId) {\n    result = '?userId=' + query.userId;\n  }\n  if (query.content) {\n    if (query.userId) {\n      result = result + '&';\n    } else {\n      result = '?';\n    }\n    result = result + 'content=' + query.content;\n  }\n  return result;\n}\n\nexport function list(query: Query) {\n  return async function (dispatch, getState: () => DefaultState) {\n    const token = getState().auth.token;\n    const queryParams = parseQuery(query);\n    const url = `${BASE_URL}/news${queryParams}`\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        Authorization: token\n      }\n    })\n    const content = await response.json();\n    if (!response.ok) {\n      const error = new APIError<any>(content.message);\n      const errors = parseError<any>(content.message);\n      error.details = errors;\n      throw error;\n    }\n    dispatch({\n      type: newsTypes.listed,\n      data: content.data\n    });\n  }\n}\n\nexport function remove(postId: string) {\n  return async function (dispatch, getState: () => DefaultState) {\n    const token = getState().auth.token;\n    const url = `${BASE_URL}/news/${postId}`\n\n    const response = await fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        Authorization: token\n      }\n    })\n    const content = await response.json();\n    if (!response.ok) {\n      const error = new APIError<any>(content.message);\n      const errors = parseError<any>(content.message);\n      error.details = errors;\n      throw error;\n    }\n    dispatch({\n      type: newsTypes.deleted,\n      data: content.data\n    });\n    dispatch(list());\n  }\n}","\n// @flow\n\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Post, DefaultState } from '../../store/types';\nimport * as actionsNews from '../../actions/news';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\ninterface NewProps extends RouteComponentProps {\n  data: Post,\n  userProfileId: state.auth.profile.id,\n  dispatch: ThunkDispatch\n}\n\nfunction parseContent(post: Post) {\n  if (!post.content) {\n    return '';\n  }\n  return post.content.substr(0, 100);\n}\n\nconst mapProps = (state: DefaultState) => ({\n  userProfileId: state.auth.profile.id\n});\n\nconst New: React.FC<NewProps> = (props) => {\n  const onRedirect = () => {\n    props.history.push('/news/' + props.data._id);\n  }\n  const onDelete = () => {\n    var r = window.confirm(\"¿Estas seguro de elimiar este post?\");\n    if (r === true) {\n      props.dispatch(actionsNews.remove(props.data._id));\n    }\n  }\n  return (\n    <>\n      <Card>\n        <Card.Img\n          variant=\"left\" src={props.data.imageUrl}\n          style={{ maxHeight: 200 }} />\n        <Card.Body>\n          <Card.Title>{props.data.title}</Card.Title>\n          <Card.Text>\n            {parseContent(props.data.content)}\n          </Card.Text>\n          <Button variant=\"primary\" onClick={onRedirect}>\n            Leer mas\n          </Button>\n          {props.data.userId === props.userProfileId && (\n            <>\n              &nbsp;\n              <Button variant=\"danger\" onClick={onDelete}>\n                Eliminar\n              </Button>\n            </>)}\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default withRouter(connect(mapProps)(New));\n","\n// @flow\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport New from '../../components/New';\nimport { DefaultState } from '../../store/types';\nimport * as actionsNews from '../../actions/news';\n\nconst mapProps = (state: DefaultState) => ({\n  news: state.news.data,\n  userProfileId: state.auth.profile.id\n});\n\ninterface HomeProps {\n  news: any[],\n  userProfileId: String,\n  dispatch: ThunkDispatch\n}\n\nconst Home: React.FC<HomeProps> = (props) => {\n  const [loaded, setLoaded] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [userId, setUserId] = useState(true);\n  // eslint-disable-next-line\n  useEffect(() => {\n    if (!loaded) {\n      console.log('news');\n      props.dispatch(actionsNews.list());\n      setLoaded(true);\n    }\n  });\n  const onTextSearchChange = (evt) => {\n    setFilter(evt.target.value);\n  }\n  const news = Array.isArray(props.news) ? props.news : [];\n  const onSearch = (evt: React.ChangeEvent<FormControlElement>) => {\n    const query = {\n      content: filter\n    }\n    if (userId) {\n      query.userId = props.userProfileId;\n    }\n    props.dispatch(actionsNews.list(query));\n  };\n  const onOnlyMe = (evt: React.ChangeEvent<FormControlElement>) => {\n    setUserId(!userId);\n  };\n  console.log('news', news);\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <h3>Espacio publicitario</h3>\n            <p style={{ textAlign: 'justify' }}>\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n              Lorem Ipsum has been the industry's standard dummy text ever since the\n              1500s, when an unknown printer took a galley of type and scrambled it to\n              make a type specimen book. It has survived not only five centuries, but\n              also the leap into electronic typesetting, remaining essentially unchanged.\n              It was popularised in the 1960s with the release of Letraset sheets\n              containing Lorem Ipsum passages, and more recently with desktop publishing\n              software like Aldus PageMaker including versions of Lorem Ipsum.\n            </p>\n          </Col>\n          <Col md={{ span: 9 }}>\n            <Row>\n              <Col md={{ span: 10 }}>\n                <Form.Control\n                  type='text' value={filter}\n                  onChange={onTextSearchChange} />\n              </Col>\n              <Col md={{ span: 2 }}>\n                <Button onClick={onSearch}>\n                  Buscar\n                </Button>\n              </Col>\n              <Col>\n                <Form.Check\n                  onChange={onOnlyMe}\n                  checked={userId}\n                  type='checkbox'\n                  label='Solo yo' />\n              </Col>\n            </Row>\n            <br />\n            <Row>\n              {news.map((post, key) => {\n                return (\n                  <Col key={key} md={{ span: 6 }}>\n                    <New data={post} />\n                    <br />\n                  </Col>\n                );\n              })}\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default connect(mapProps)(Home);\n","\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface ShowErrorMessageProps {\n  msg: String\n}\n\nconst ShowErrorMessage: React.FC<ShowErrorMessageProps> = ({ msg }) => {\n  return (\n    <Form.Text className=\"text-danger\">\n      {msg}\n    </Form.Text>\n  );\n}\n\nexport default ShowErrorMessage;\n","\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport ShowErrorMessage from '../ShowErrorMessage/ShowErrorMessage';\nimport * as actionsNews from '../../actions/news';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\ninterface SignInFormProps extends RouteComponentProps {\n  dispatch: ThunkDispatch\n}\n\nconst NewsNew: React.FC<SignInFormProps> = (props) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [image, setImage] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n\n  const [titleError, setTitleError] = useState('');\n  const [contentError, setContentError] = useState('');\n\n  const onChange = (setter) => (evt) => {\n    setter(evt.target.value);\n  }\n  const onFileChange = (setter) => (evt: React.ChangeEvent<FormControlElement>) => {\n    setImageFile(evt.target.files[0])\n    setter(evt.target.value);\n  }\n\n  const onSubmit = async (evt: React.FormEvent<HTMLElement>) => {\n    evt.preventDefault();\n    try {      \n      await props.dispatch(actionsNews.create({\n        title: title,\n        content: content,\n        image: imageFile\n      }));\n      alert('felicidades e ha creado con exito.');\n      props.history.push('/');\n    } catch (error) {\n      const apiError: APIError<actionsUsers.User> = error;\n      if (apiError.details) {\n        setTitleError(apiError.details.title);\n        setContentError(apiError.details.content);\n      }\n    }\n  }\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Titulo</Form.Label>\n        <Form.Control\n          type=\"text\" value={title}\n          onChange={onChange(setTitle)}\n        />\n        <ShowErrorMessage msg={titleError} />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Contenido</Form.Label>\n        <Form.Control\n          style={{ minHeight: 200 }}\n          as=\"textarea\" value={content}\n          onChange={onChange(setContent)} />\n        <ShowErrorMessage msg={contentError} />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Archivo</Form.Label>\n        <Form.Control\n          type=\"file\" value={image}\n          onChange={onFileChange(setImage)} />\n        <ShowErrorMessage msg={contentError} />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Enviar\n      </Button>\n    </Form>\n  );\n}\n\nexport default withRouter(connect()(NewsNew));\n","\n// @flow\n\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport NewsNew from '../../components/Forms/NewsNew';\n\ninterface NewPostProps {\n  news: any[]\n}\n\nconst NewPost: React.FC<NewPostProps> = (props) => {\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <h3>Espacio publicitario</h3>\n            <p style={{ textAlign: 'justify' }}>\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n            </p>\n          </Col>\n          <Col md={{ span: 9 }}>\n            <NewsNew />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default connect()(NewPost);\n","\n// @flow\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport List from './List';\nimport NewPost from './NewPost';\nimport { Switch, Route } from 'react-router-dom';\n\ninterface NewsProps {\n  news: any[]\n}\n\nconst News: React.FC<NewsProps> = (props) => {\n  return (\n    <>\n      <Switch>\n        <Route path='/news/new' component={NewPost} />\n        <Route path='/' component={List} exact={true} />\n      </Switch>\n    </>\n  );\n};\n\nexport default connect()(News);\n","// @flow\n\nimport React from 'react';\nimport { Switch } from 'react-router-dom';\nimport Route from '../Route';\nimport News from '../../pages/News';\n\nconst Router = () => {\n  return (\n    <>\n      <Switch>\n        <Route path='/' component={News} exact={true} />\n        <Route path='/news' component={News} exact={false} />\n      </Switch>\n    </>\n  )\n}\n\nexport default Router;\n","\nimport React from 'react';\nimport {\n  Navbar, Nav\n} from 'react-bootstrap';\n\nconst UnauthenticateNavBar = (props) => {\n  return (\n    <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\n      <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n        </Nav>\n        <Nav className=\"mr-right\">\n          <Nav.Link href=\"/sign-in\">Ingresa</Nav.Link>\n          <Nav.Link href=\"/sign-up\">Registrate</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default UnauthenticateNavBar;\n","\n// @flow\n\nimport { authTypes } from './actionTypes';\nimport { APIError } from '../utils/errors';\nimport parseError from '../utils/parseError';\nimport config from '../config';\n\nexport interface Credentials {\n  email: string,\n  password: string\n}\n\nconst { BASE_URL } = config;\n\nexport function login(credentials: Credentials) {\n  return async function (dispatch) {\n    const url = `${BASE_URL}/auth/login`\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n    const content = await response.json();\n    if (!response.ok) {\n      const error = new APIError<Credentials>(content.message);\n      const errors = parseError<Credentials>(content.message);\n      error.details = errors;\n      throw error;\n    }\n    dispatch({\n      type: authTypes.logged,\n      token: content.token,\n      profile: content.profile\n    });\n  }\n}\n","\n// @flow\n\nimport validator from 'validator';\n\nexport function isName(fieldName: String, value: String) {\n  if (!/^([A-Za-z]{3,}(\\s)?)+/.test(value)) {\n    return `El ${fieldName} no es valido`;\n  }\n  return '';\n}\n\nexport function isEmail(fieldName: String, value: string) {\n  if (!validator.isEmail(value)) {\n    return `El ${fieldName} no es valido`;\n  }\n  return '';\n}\n\nexport function isSecurePassword(fieldName: String, value: string) {\n  if (value.match(/[a-z]/g) &&\n    value.match(/[A-Z]/g) &&\n    value.match(/[0-9]/g) &&\n    value.match(/[#$%&*-_!]/g) &&\n    value.length >= 8)\n    return;\n  return `La contraseña no es lo suficientemente segura`;\n}\n\nexport function isSecurePasswordConfirm(password: String) {\n  return function (fieldName: String, value: String) {\n    if (password !== value) {\n      return `${fieldName}: las contraseñas no coinciden`\n    }\n    return '';\n  }\n}\n","\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport ShowErrorMessage from '../ShowErrorMessage/ShowErrorMessage';\nimport * as actionsAuth from '../../actions/auth';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { isEmail } from './validator';\n\ninterface SignInFormProps extends RouteComponentProps {\n  dispatch: ThunkDispatch\n}\n\nconst SignInForm: React.FC<SignInFormProps> = (props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const onChange = (setter) => (evt) => {\n    setter(evt.target.value);\n  }\n  const onBlur = (setter, validator, alias) =>\n    (evt: React.FocusEvent<HTMLInputElement>) => {\n      const result = validator(alias, evt.target.value);\n      setter(result);\n    }\n\n  const onSubmit = async (evt: React.FormEvent<HTMLElement>) => {\n    evt.preventDefault();\n    try {\n      await props.dispatch(actionsAuth.login({\n        email,\n        password\n      }));\n      props.history.push('/');\n    } catch (error) {\n      console.log(error);\n      const apiError: APIError<actionsUsers.User> = error;\n      if (apiError.details) {\n        setPasswordError('Usuario o contraseña invalido.');\n      }\n    }\n  }\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email</Form.Label>\n        <Form.Control\n          type=\"email\" value={email}\n          onBlur={onBlur(setEmailError, isEmail, 'Email')}\n          onChange={onChange(setEmail)}\n        />\n        <ShowErrorMessage msg={emailError} />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Contraseña</Form.Label>\n        <Form.Control\n          type=\"password\" value={password}\n          onChange={onChange(setPassword)} />\n        <ShowErrorMessage msg={passwordError} />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Enviar\n      </Button>\n    </Form>\n  );\n}\n\nexport default withRouter(connect()(SignInForm));\n","\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport SignInForm from '../../components/Forms/SignInForm';\n\nconst styles = {\n  Row: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n}\n\nconst Signin = () => {\n  return (\n    <>\n      <Row style={styles.Row}>\n        <Col md={{ offset: 4, span: 4 }}>\n          <header>\n            <h3 style={{ textAlign: 'center', fontWeight: 'bold' }}>\n              Ingresa\n            </h3>\n          </header><br />\n          <SignInForm />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default Signin;\n","\n// @flow\n\nimport { userTypes } from './actionTypes';\nimport { APIError } from '../utils/errors';\nimport parseError from '../utils/parseError';\nimport config from '../config';\n\nexport interface User {\n  name: string,\n  lastName: string,\n  email: string,\n  password: string\n}\n\nconst { BASE_URL } = config;\n\nexport function create(user: User) {\n  return async function (dispatch) {\n    const url = `${BASE_URL}/users`\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    })\n    const content = await response.json();\n    if (!response.ok) {\n      const error = new APIError<User>(content.message);\n      const errors = parseError<User>(content.message);\n      error.details = errors;\n      throw error;\n    }\n    dispatch({type: userTypes.created});\n  }\n}\n","\nimport React, { useState } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport ShowErrorMessage from '../ShowErrorMessage';\nimport { Link } from 'react-router-dom';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { connect } from 'react-redux';\nimport { isName, isEmail, isSecurePassword, isSecurePasswordConfirm } from './validator';\nimport * as actionsUsers from '../../actions/users';\nimport { APIError } from '../../utils/errors';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nconst styles: any = {\n  terms: {\n    textAlign: 'justify'\n  }\n};\n\ninterface SignUpFormProps extends RouteComponentProps {\n  dispatch: ThunkDispatch\n}\n\nconst SignUpForm: React.FC<SignUpFormProps> = (props) => {\n  const [name, setName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [acceptTerms, setAcceptTerms] = useState(false);\n\n  const [nameError, setNameError] = useState('');\n  const [lastNameError, setLastNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [passwordConfirmError, setPasswordConfirmError] = useState('');\n\n  const onChange = (setter) => (evt) => {\n    setter(evt.target.value);\n  }\n  const onBlur = (setter, validator, alias) =>\n    (evt: React.FocusEvent<HTMLInputElement>) => {\n      const result = validator(alias, evt.target.value);\n      setter(result);\n    }\n  const onSubmit = async (evt: React.FormEvent<HTMLElement>) => {\n    evt.preventDefault();\n    try {\n      await props.dispatch(actionsUsers.create({\n        name,\n        email,\n        lastName,\n        password\n      }));\n      console.log('Registro exitoso')\n      alert('Registro exitoso');\n      props.history.push('/sign-in');\n    } catch (error) {\n      console.log(error);\n      const apiError: APIError<actionsUsers.User> = error;\n      if (apiError.details) {\n        setNameError(apiError.details.name);\n        setLastNameError(apiError.details.lastName);\n        setEmailError(apiError.details.email);\n        setPasswordError(apiError.details.password);\n      }\n    }\n  }\n  return (\n    <Form onSubmit={onSubmit}>\n      <Row>\n        <Col>\n          <Form.Group controlId=\"formBasicName\">\n            <Form.Label>Nombres</Form.Label>\n            <Form.Control\n              name='Nombres'\n              type=\"text\" value={name}\n              onBlur={onBlur(setNameError, isName, 'Nombres')}\n              onChange={onChange(setName)} />\n            <ShowErrorMessage msg={nameError} />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group controlId=\"formBasicLastName\">\n            <Form.Label>Apellidos</Form.Label>\n            <Form.Control\n              type=\"text\" value={lastName}\n              onBlur={onBlur(setLastNameError, isName, 'Apellidos')}\n              onChange={onChange(setLastName)}\n            />\n            <ShowErrorMessage msg={lastNameError} />\n          </Form.Group>\n        </Col>\n      </Row>\n\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email</Form.Label>\n        <Form.Control\n          type=\"email\" value={email}\n          onBlur={onBlur(setEmailError, isEmail, 'Email')}\n          onChange={onChange(setEmail)}\n        />\n        <ShowErrorMessage msg={emailError} />\n      </Form.Group>\n\n      <Row>\n        <Col>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Contraseña</Form.Label>\n            <Form.Control\n              type=\"password\" value={password}\n              onBlur={onBlur(setPasswordError, isSecurePassword, 'Contraseña')}\n              onChange={onChange(setPassword)} />\n          </Form.Group>\n          <ShowErrorMessage msg={passwordError} />\n        </Col>\n        <Col>\n          <Form.Group controlId=\"formBasicPasswordConfirm\">\n            <Form.Label>Reescribir contraseña</Form.Label>\n            <Form.Control\n              type=\"password\" value={passwordConfirm}\n              onBlur={onBlur(\n                setPasswordConfirmError,\n                isSecurePasswordConfirm(password),\n                'Reescribir contraseña'\n              )}\n              onChange={onChange(setPasswordConfirm)} />\n            <ShowErrorMessage msg={!passwordError ? passwordConfirmError : ''} />\n          </Form.Group>\n        </Col>\n      </Row>\n\n      <h5>Terminos y condiciones</h5>\n      <p style={styles.terms}>\n        Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\n        when an unknown printer took a galley of type and scrambled it to make a type\n        specimen book. It has survived not only five centuries, but also the leap\n        into electronic typesetting, remaining essentially unchanged. &nbsp;\n        <Link to='/terms'>Leer mas</Link>.\n      </p>\n\n      <Form.Group controlId=\"formBasicCheckbox\">\n        <Form.Check\n          onChange={() => setAcceptTerms(!acceptTerms)}\n          type=\"checkbox\" checked={acceptTerms}\n          label=\"Acepto los terminos y condiciones\" />\n      </Form.Group>\n\n      <Button disabled={!acceptTerms} type=\"submit\">\n        Enviar\n      </Button>\n    </Form>\n  );\n}\n\nexport default withRouter(connect()(SignUpForm));\n","\n// @flow\n\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport SignUpForm from '../../components/Forms/SignUpForm';\n\nconst styles = {\n  Row: {\n    marginLeft: 0,\n    marginRight: 0\n  }\n}\n\nconst SignUp = () => {\n  return (\n    <>\n      <Row style={styles.Row}>\n        <Col md={{ offset: 3, span: 6 }}>\n          <header>\n            <h3 style={{ textAlign: 'center', fontWeight: 'bold' }}>Registrate</h3>\n          </header><br />\n          <SignUpForm />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default SignUp;\n","\nimport React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"page-footer font-small blue pt-4\">\n      <div className=\"container-fluid text-center text-md-left\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-md-0 mt-3\">\n            <h5 className=\"text-uppercase\">Footer Content</h5>\n            <p>Here you can use rows and columns to organize your footer content.</p>\n          </div>\n          <hr className=\"clearfix w-100 d-md-none pb-3\" />\n          <div className=\"col-md-3 mb-md-0 mb-3\">\n            <h5 className=\"text-uppercase\">Links</h5>\n            <ul className=\"list-unstyled\">\n              <li>\n                <a href=\"#!\">Link 1</a>\n              </li>\n              <li>\n                <a href=\"#!\">Link 2</a>\n              </li>\n              <li>\n                <a href=\"#!\">Link 3</a>\n              </li>\n              <li>\n                <a href=\"#!\">Link 4</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-md-3 mb-md-0 mb-3\">\n            <h5 className=\"text-uppercase\">Links</h5>\n            <ul className=\"list-unstyled\">\n              <li>\n                <a href=\"#!\">Link 1</a>\n              </li>\n              <li>\n                <a href=\"#!\">Link 2</a>\n              </li>\n              <li>\n                <a href=\"#!\">Link 3</a>\n              </li>\n              <li>\n                <a href=\"#!\">Link 4</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n        <a href=\"https://mdbootstrap.com/\"> MDBootstrap.com</a>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;\n","\nimport React from 'react';\nimport {\n  Navbar, Nav\n} from 'react-bootstrap';\n\nconst AuthenticateNavBar = (props) => {\n  return (\n    <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\n      <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n        </Nav>\n        <Nav className=\"mr-right\">\n          <Nav.Link href=\"/news/new\">Nuevo</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default AuthenticateNavBar;\n","\nimport React from 'react';\nimport Router from '../Router';\nimport UnauthenticateNavBar from '../UnauthenticateNavBar/UnauthenticateNavBar';\nimport { connect } from 'react-redux';\nimport { Switch, Redirect } from 'react-router-dom';\nimport Route from '../Route';\nimport SignIn from '../../pages/SignIn';\nimport SignUp from '../../pages/SignUp';\nimport { DefaultState } from '../../store/types';\nimport Footer from '../Footer/Footer';\nimport AuthenticateNavBar from '../AuthenticateNavBar/AuthenticateNavBar';\n\nconst mapProps = (state: DefaultState) => ({\n  logged: state.auth.logged\n});\n\ninterface LayoutProps {\n  logged: Boolean\n}\n\nconst Layout: React.FC<LayoutProps> = (props) => {\n  if (!props.logged) {\n    return (\n      <>\n        <UnauthenticateNavBar />\n        <br />\n        <Switch>\n          <Route component={() => <Redirect to='/sign-in' />} path='/' exact />\n          <Route component={SignIn} path='/sign-in' exact />\n          <Route component={SignUp} path='/sign-up' exact />\n          <Route component={Router} />\n        </Switch>\n        <br /><br />\n        <Footer />\n      </>\n    );\n  }\n  return (\n    <>\n      <AuthenticateNavBar />\n      <br />\n      <Router />\n    </>\n  );\n}\n\nexport default connect(mapProps)(Layout);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Layout from './components/Layout';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Layout />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}